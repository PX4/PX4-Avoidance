#!/bin/bash

. ~/.bash_ros

# Wait until ssh-server is up
printf 'Trying to connect'
ssh odroid@odroid 'printf "\nConnected!\n"' 2> /dev/null
while test $? -gt 0
do 
     printf '.'
     sleep 2
     ssh odroid@odroid 'printf "\nConnected!\n"' 2> /dev/null
done

sleep 5

# Run the commands in separate tabs
gnome-terminal --tab -e "ssh -t odroid@odroid 'sleep 0;  . ~/.bash_ros; roscore; bash -i'" \
               --tab -e "ssh -t odroid@odroid 'sleep 7;  . ~/.bash_ros; roslaunch mavros px4.launch fcu_url:=/dev/ttySAC0:500000; bash -i'" \
               --tab -e "ssh -t odroid@odroid 'sleep 10; . ~/.bash_ros; roslaunch uvc_ros_driver uvc_ros_driver.launch numberOfCameras:=8 flip:=1 calibrationMode:=0; bash -i'" \
               --tab -e "ssh -t odroid@odroid 'sleep 35; . ~/.bash_ros; roslaunch disparity_to_point_cloud depth_map_fusion.launch base_id:=0; bash -i'" \
               --tab -e "ssh -t odroid@odroid 'sleep 35; . ~/.bash_ros; roslaunch disparity_to_point_cloud depth_map_fusion.launch base_id:=4; bash -i'" \
               --tab -e "ssh -t odroid@odroid 'sleep 6;  . ~/.bash_ros; roslaunch disparity_to_point_cloud d2pcloud_triplet.launch; bash -i'" \
               --tab -e "ssh -t odroid@odroid 'sleep 7;  . ~/.bash_ros; roslaunch avoidance global_planner_offboard.launch; bash -i'" \
               --tab -e "ssh -t odroid@odroid 'sleep 1;  . ~/.bash_ros; cd bags; bash -i'"

export ROS_MASTER_URI=http://odroid:11311;
export ROS_IP=$(hostname -I);
sleep 10;
rviz &
rosrun rqt_reconfigure rqt_reconfigure

exit 0
